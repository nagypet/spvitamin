/*
 * Copyright 2020-2023 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}
apply from: '../gradle/common.gradle'

repositories {
    mavenCentral()
}


// it will be a library, no fat jar
bootJar {
    enabled = false
}


dependencies {
    implementation project(':spvitamin-core')
    implementation project(':spvitamin-spring-general')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Boot
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.retry:spring-retry:1.3.1'

    // jakarta.validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // apache.commons
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"

    // Slf4J
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    testImplementation('log4j:log4j:1.2.17')

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.springframework.security:spring-security-test'
}


test {
    useJUnitPlatform()
}
