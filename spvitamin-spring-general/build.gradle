/*
 * Copyright 2020-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Note that plugins block cannot be used in subprojects, that is wha the old fashioned way
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply from: '../gradle/common.gradle'


repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    flatDir {
        dirs '../gradle/localrepo'
    }
}


// it will be a library, no fat jar
bootJar {
   enabled = false
}

sourceCompatibility = 11

dependencies {
	compile project(':spvitamin-core')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // apache.commons
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
	
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.security:spring-security-core'

    // Validation
    implementation 'javax.validation:validation-api'

	// FasterXML
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
	
    // Slf4J
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'    
    testImplementation('log4j:log4j:1.2.17')
	
    // Test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


test {
    useJUnitPlatform()
}
