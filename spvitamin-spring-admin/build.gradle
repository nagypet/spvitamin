/*
 * Copyright 2020-2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    alias libs.plugins.org.springframework.boot
    alias libs.plugins.io.spring.dependency.management
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    alias libs.plugins.habarta.typescript.generator
}
apply from: '../gradle/common.gradle'

repositories {
    mavenCentral()
}


// it will be a library, no fat jar
bootJar {
    enabled = false
}


dependencies {
    // -----------------------------------------------------------------------------------------------------------------
    // Compile dependencies
    // -----------------------------------------------------------------------------------------------------------------
    implementation project(':spvitamin-core')
    implementation project(':spvitamin-spring-general')
    implementation project(':spvitamin-spring-security')
    implementation project(':spvitamin-spring-logging')

    // Lombok
    compileOnly libs.lombok
    testCompileOnly libs.lombok
    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok

    // apache.commons
    implementation libs.commons.lang3
    implementation libs.commons.collections4
    implementation libs.commons.io

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Guava
    implementation libs.guava

    // Swagger
    implementation libs.openapi.ui
    implementation libs.openapi.api

    // -----------------------------------------------------------------------------------------------------------------
    // Test dependencies
    // -----------------------------------------------------------------------------------------------------------------
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
    useJUnitPlatform()
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
            'hu.perit.spvitamin.spring.rest.model.**'
    ]
    outputFile = 'build/spvitamin-admin-models.ts'
    outputFileType = 'implementationFile'
    outputKind = 'module'
    namespace = 'Spvitamin'
    //disableTaggedUnions = true
    optionalProperties = 'useSpecifiedAnnotations'
    optionalAnnotations = [
            'javax.annotation.Nullable'
    ]
    optionalPropertiesDeclaration = 'nullableType'
}
